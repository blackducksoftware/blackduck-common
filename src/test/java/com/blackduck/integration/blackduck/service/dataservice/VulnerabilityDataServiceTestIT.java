package com.blackduck.integration.blackduck.service.dataservice;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.util.List;
import java.util.Optional;

import com.blackduck.integration.blackduck.TimingExtension;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;

import com.synopsys.integration.bdio.SimpleBdioFactory;
import com.synopsys.integration.bdio.model.externalid.ExternalId;
import com.synopsys.integration.bdio.model.externalid.ExternalIdFactory;
import com.synopsys.integration.blackduck.api.generated.response.ComponentsView;
import com.synopsys.integration.blackduck.api.generated.view.ComponentVersionView;
import com.synopsys.integration.blackduck.api.generated.view.VulnerabilityView;
import com.blackduck.integration.blackduck.http.client.IntHttpClientTestHelper;
import com.blackduck.integration.blackduck.service.BlackDuckServicesFactory;
import com.blackduck.integration.blackduck.service.model.ComponentVersionVulnerabilities;

@Tag("integration")
@ExtendWith(TimingExtension.class)
public class VulnerabilityDataServiceTestIT {
    private final IntHttpClientTestHelper intHttpClientTestHelper = new IntHttpClientTestHelper();

    @Test
    public void testGetCommonsFileUploadVulns() throws Exception {
        BlackDuckServicesFactory blackDuckServicesFactory = intHttpClientTestHelper.createBlackDuckServicesFactory();
        ComponentService componentService = blackDuckServicesFactory.createComponentService();
        SimpleBdioFactory simpleBdioFactory = new SimpleBdioFactory();
        ExternalIdFactory externalIdFactory = simpleBdioFactory.getExternalIdFactory();

        ExternalId commonsFileUploadExternalId = externalIdFactory.createMavenExternalId("commons-fileupload", "commons-fileupload", "1.2.2");

        Optional<ComponentsView> searchResult = componentService.getFirstOrEmptyResult(commonsFileUploadExternalId);
        Optional<ComponentVersionView> componentVersionView = componentService.getComponentVersionView(searchResult.get());
        ComponentVersionVulnerabilities componentVersionVulnerabilities = componentService.getComponentVersionVulnerabilities(componentVersionView.get());
        List<VulnerabilityView> vulnerabilities = componentVersionVulnerabilities.getVulnerabilities();

        System.out.println(vulnerabilities);
        assertNotNull(vulnerabilities);
        assertFalse(vulnerabilities.isEmpty());

        ExternalId integrationCommonExternalId = externalIdFactory.createMavenExternalId("com.blackducksoftware.integration", "integration-common", "15.0.0");
        searchResult = componentService.getFirstOrEmptyResult(integrationCommonExternalId);
        componentVersionView = componentService.getComponentVersionView(searchResult.get());
        componentVersionVulnerabilities = componentService.getComponentVersionVulnerabilities(componentVersionView.get());
        vulnerabilities = componentVersionVulnerabilities.getVulnerabilities();

        System.out.println(vulnerabilities);
        assertNotNull(vulnerabilities);
        assertTrue(vulnerabilities.isEmpty());
    }

}
