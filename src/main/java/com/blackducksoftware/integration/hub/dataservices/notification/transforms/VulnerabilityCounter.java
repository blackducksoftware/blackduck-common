package com.blackducksoftware.integration.hub.dataservices.notification.transforms;

import java.util.List;
import java.util.Map;

import com.blackducksoftware.integration.hub.api.ProjectVersionRestService;
import com.blackducksoftware.integration.hub.api.notification.NotificationItem;
import com.blackducksoftware.integration.hub.api.notification.VulnerabilityNotificationItem;
import com.blackducksoftware.integration.hub.api.project.ProjectVersion;
import com.blackducksoftware.integration.hub.dataservices.notification.items.NotificationCountBuilder;
import com.blackducksoftware.integration.hub.exception.HubItemTransformException;

public class VulnerabilityCounter extends AbstractNotificationCounter {

	public VulnerabilityCounter(final ProjectVersionRestService projectVersionService,
			final Map<String, NotificationCountBuilder> countBuilderMap) {
		super(projectVersionService, countBuilderMap);
	}

	@Override
	public void count(final NotificationItem item) throws HubItemTransformException {

		try {
			final VulnerabilityNotificationItem vulnerabilityNotificationItem = (VulnerabilityNotificationItem) item;
			final List<ProjectVersion> projectVersionList = vulnerabilityNotificationItem.getContent()
					.getAffectedProjectVersions();
			for (final ProjectVersion projectVersion : projectVersionList) {
				final NotificationCountBuilder builder = getCountBuilder(projectVersion);
				builder.incrementVulnerabilityCounts(vulnerabilityNotificationItem);
			}
		} catch (final Exception e) {
			throw new HubItemTransformException(e);
		}
	}
}
